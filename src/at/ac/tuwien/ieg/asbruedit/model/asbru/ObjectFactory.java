//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.12.19 at 06:35:24 PM MEZ 
//


package at.ac.tuwien.ieg.asbruedit.model.asbru;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the at.ac.tuwien.ieg.asbruedit.model.asbru package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: at.ac.tuwien.ieg.asbruedit.model.asbru
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link SetupPrecondition }
     * 
     */
    public SetupPrecondition createSetupPrecondition() {
        return new SetupPrecondition();
    }

    /**
     * Create an instance of {@link MaximalDataDelay }
     * 
     */
    public MaximalDataDelay createMaximalDataDelay() {
        return new MaximalDataDelay();
    }

    /**
     * Create an instance of {@link OnSuspend }
     * 
     */
    public OnSuspend createOnSuspend() {
        return new OnSuspend();
    }

    /**
     * Create an instance of {@link CyclicalTimePointAssignment }
     * 
     */
    public CyclicalTimePointAssignment createCyclicalTimePointAssignment() {
        return new CyclicalTimePointAssignment();
    }

    /**
     * Create an instance of {@link CrossOverTime }
     * 
     */
    public CrossOverTime createCrossOverTime() {
        return new CrossOverTime();
    }

    /**
     * Create an instance of {@link ParameterAssignment }
     * 
     */
    public ParameterAssignment createParameterAssignment() {
        return new ParameterAssignment();
    }

    /**
     * Create an instance of {@link WaitingPeriod }
     * 
     */
    public WaitingPeriod createWaitingPeriod() {
        return new WaitingPeriod();
    }

    /**
     * Create an instance of {@link Preferences }
     * 
     */
    public Preferences createPreferences() {
        return new Preferences();
    }

    /**
     * Create an instance of {@link AbortIf }
     * 
     */
    public AbortIf createAbortIf() {
        return new AbortIf();
    }

    /**
     * Create an instance of {@link Interval }
     * 
     */
    public Interval createInterval() {
        return new Interval();
    }

    /**
     * Create an instance of {@link CentileDef }
     * 
     */
    public CentileDef createCentileDef() {
        return new CentileDef();
    }

    /**
     * Create an instance of {@link FunctionDef }
     * 
     */
    public FunctionDef createFunctionDef() {
        return new FunctionDef();
    }

    /**
     * Create an instance of {@link NumericalConstant }
     * 
     */
    public NumericalConstant createNumericalConstant() {
        return new NumericalConstant();
    }

    /**
     * Create an instance of {@link ArrayRef }
     * 
     */
    public ArrayRef createArrayRef() {
        return new ArrayRef();
    }

    /**
     * Create an instance of {@link StateSpecificPatternNot }
     * 
     */
    public StateSpecificPatternNot createStateSpecificPatternNot() {
        return new StateSpecificPatternNot();
    }

    /**
     * Create an instance of {@link DoBefore }
     * 
     */
    public DoBefore createDoBefore() {
        return new DoBefore();
    }

    /**
     * Create an instance of {@link Arguments }
     * 
     */
    public Arguments createArguments() {
        return new Arguments();
    }

    /**
     * Create an instance of {@link ForEachPlan }
     * 
     */
    public ForEachPlan createForEachPlan() {
        return new ForEachPlan();
    }

    /**
     * Create an instance of {@link Intention }
     * 
     */
    public Intention createIntention() {
        return new Intention();
    }

    /**
     * Create an instance of {@link StartDef }
     * 
     */
    public StartDef createStartDef() {
        return new StartDef();
    }

    /**
     * Create an instance of {@link InsertBeforeIterator }
     * 
     */
    public InsertBeforeIterator createInsertBeforeIterator() {
        return new InsertBeforeIterator();
    }

    /**
     * Create an instance of {@link Minute }
     * 
     */
    public Minute createMinute() {
        return new Minute();
    }

    /**
     * Create an instance of {@link PatientRecordDef }
     * 
     */
    public PatientRecordDef createPatientRecordDef() {
        return new PatientRecordDef();
    }

    /**
     * Create an instance of {@link OnAbort }
     * 
     */
    public OnAbort createOnAbort() {
        return new OnAbort();
    }

    /**
     * Create an instance of {@link ParameterDef }
     * 
     */
    public ParameterDef createParameterDef() {
        return new ParameterDef();
    }

    /**
     * Create an instance of {@link Plan }
     * 
     */
    public Plan createPlan() {
        return new Plan();
    }

    /**
     * Create an instance of {@link Delay }
     * 
     */
    public Delay createDelay() {
        return new Delay();
    }

    /**
     * Create an instance of {@link All }
     * 
     */
    public All createAll() {
        return new All();
    }

    /**
     * Create an instance of {@link MinimumOfValidPoints }
     * 
     */
    public MinimumOfValidPoints createMinimumOfValidPoints() {
        return new MinimumOfValidPoints();
    }

    /**
     * Create an instance of {@link UnitClass }
     * 
     */
    public UnitClass createUnitClass() {
        return new UnitClass();
    }

    /**
     * Create an instance of {@link CyclicalTimeAnnotationRef }
     * 
     */
    public CyclicalTimeAnnotationRef createCyclicalTimeAnnotationRef() {
        return new CyclicalTimeAnnotationRef();
    }

    /**
     * Create an instance of {@link IsAtEnd }
     * 
     */
    public IsAtEnd createIsAtEnd() {
        return new IsAtEnd();
    }

    /**
     * Create an instance of {@link QualitativeConstant }
     * 
     */
    public QualitativeConstant createQualitativeConstant() {
        return new QualitativeConstant();
    }

    /**
     * Create an instance of {@link TheExpression }
     * 
     */
    public TheExpression createTheExpression() {
        return new TheExpression();
    }

    /**
     * Create an instance of {@link CompleteCondition }
     * 
     */
    public CompleteCondition createCompleteCondition() {
        return new CompleteCondition();
    }

    /**
     * Create an instance of {@link ConstantRef }
     * 
     */
    public ConstantRef createConstantRef() {
        return new ConstantRef();
    }

    /**
     * Create an instance of {@link NegativeInfinite }
     * 
     */
    public NegativeInfinite createNegativeInfinite() {
        return new NegativeInfinite();
    }

    /**
     * Create an instance of {@link Explanation }
     * 
     */
    public Explanation createExplanation() {
        return new Explanation();
    }

    /**
     * Create an instance of {@link AverageDef }
     * 
     */
    public AverageDef createAverageDef() {
        return new AverageDef();
    }

    /**
     * Create an instance of {@link CalculationDef }
     * 
     */
    public CalculationDef createCalculationDef() {
        return new CalculationDef();
    }

    /**
     * Create an instance of {@link Subplans }
     * 
     */
    public Subplans createSubplans() {
        return new Subplans();
    }

    /**
     * Create an instance of {@link Length }
     * 
     */
    public Length createLength() {
        return new Length();
    }

    /**
     * Create an instance of {@link None }
     * 
     */
    public None createNone() {
        return new None();
    }

    /**
     * Create an instance of {@link RightHandParameter }
     * 
     */
    public RightHandParameter createRightHandParameter() {
        return new RightHandParameter();
    }

    /**
     * Create an instance of {@link SetOfCyclicalCompleteConditions }
     * 
     */
    public SetOfCyclicalCompleteConditions createSetOfCyclicalCompleteConditions() {
        return new SetOfCyclicalCompleteConditions();
    }

    /**
     * Create an instance of {@link PrimitivePlanDef }
     * 
     */
    public PrimitivePlanDef createPrimitivePlanDef() {
        return new PrimitivePlanDef();
    }

    /**
     * Create an instance of {@link DelayDef }
     * 
     */
    public DelayDef createDelayDef() {
        return new DelayDef();
    }

    /**
     * Create an instance of {@link Conditions }
     * 
     */
    public Conditions createConditions() {
        return new Conditions();
    }

    /**
     * Create an instance of {@link SuspendCondition }
     * 
     */
    public SuspendCondition createSuspendCondition() {
        return new SuspendCondition();
    }

    /**
     * Create an instance of {@link MultiSetDef }
     * 
     */
    public MultiSetDef createMultiSetDef() {
        return new MultiSetDef();
    }

    /**
     * Create an instance of {@link AdministrativeData }
     * 
     */
    public AdministrativeData createAdministrativeData() {
        return new AdministrativeData();
    }

    /**
     * Create an instance of {@link CyclicalCompleteCondition }
     * 
     */
    public CyclicalCompleteCondition createCyclicalCompleteCondition() {
        return new CyclicalCompleteCondition();
    }

    /**
     * Create an instance of {@link BasedOnEntry }
     * 
     */
    public BasedOnEntry createBasedOnEntry() {
        return new BasedOnEntry();
    }

    /**
     * Create an instance of {@link UpperBound }
     * 
     */
    public UpperBound createUpperBound() {
        return new UpperBound();
    }

    /**
     * Create an instance of {@link SetDef }
     * 
     */
    public SetDef createSetDef() {
        return new SetDef();
    }

    /**
     * Create an instance of {@link PlanLibrary }
     * 
     */
    public PlanLibrary createPlanLibrary() {
        return new PlanLibrary();
    }

    /**
     * Create an instance of {@link Changes }
     * 
     */
    public Changes createChanges() {
        return new Changes();
    }

    /**
     * Create an instance of {@link Costs }
     * 
     */
    public Costs createCosts() {
        return new Costs();
    }

    /**
     * Create an instance of {@link MaximalIncrease }
     * 
     */
    public MaximalIncrease createMaximalIncrease() {
        return new MaximalIncrease();
    }

    /**
     * Create an instance of {@link ConstantDef }
     * 
     */
    public ConstantDef createConstantDef() {
        return new ConstantDef();
    }

    /**
     * Create an instance of {@link ReturnValueAssignment }
     * 
     */
    public ReturnValueAssignment createReturnValueAssignment() {
        return new ReturnValueAssignment();
    }

    /**
     * Create an instance of {@link StateSpecificPatternCombination }
     * 
     */
    public StateSpecificPatternCombination createStateSpecificPatternCombination() {
        return new StateSpecificPatternCombination();
    }

    /**
     * Create an instance of {@link ConstraintNot }
     * 
     */
    public ConstraintNot createConstraintNot() {
        return new ConstraintNot();
    }

    /**
     * Create an instance of {@link Denominator }
     * 
     */
    public Denominator createDenominator() {
        return new Denominator();
    }

    /**
     * Create an instance of {@link RemoveAtPosition }
     * 
     */
    public RemoveAtPosition createRemoveAtPosition() {
        return new RemoveAtPosition();
    }

    /**
     * Create an instance of {@link CyclicalPlan }
     * 
     */
    public CyclicalPlan createCyclicalPlan() {
        return new CyclicalPlan();
    }

    /**
     * Create an instance of {@link FieldDef }
     * 
     */
    public FieldDef createFieldDef() {
        return new FieldDef();
    }

    /**
     * Create an instance of {@link Maximum }
     * 
     */
    public Maximum createMaximum() {
        return new Maximum();
    }

    /**
     * Create an instance of {@link InsertAfterPosition }
     * 
     */
    public InsertAfterPosition createInsertAfterPosition() {
        return new InsertAfterPosition();
    }

    /**
     * Create an instance of {@link HasOccurred }
     * 
     */
    public HasOccurred createHasOccurred() {
        return new HasOccurred();
    }

    /**
     * Create an instance of {@link InitialValue }
     * 
     */
    public InitialValue createInitialValue() {
        return new InitialValue();
    }

    /**
     * Create an instance of {@link ReferTo }
     * 
     */
    public ReferTo createReferTo() {
        return new ReferTo();
    }

    /**
     * Create an instance of {@link ChangeDef }
     * 
     */
    public ChangeDef createChangeDef() {
        return new ChangeDef();
    }

    /**
     * Create an instance of {@link OneOf }
     * 
     */
    public OneOf createOneOf() {
        return new OneOf();
    }

    /**
     * Create an instance of {@link FunctionCall }
     * 
     */
    public FunctionCall createFunctionCall() {
        return new FunctionCall();
    }

    /**
     * Create an instance of {@link TimeAnnotationRef }
     * 
     */
    public TimeAnnotationRef createTimeAnnotationRef() {
        return new TimeAnnotationRef();
    }

    /**
     * Create an instance of {@link ValueDefs }
     * 
     */
    public ValueDefs createValueDefs() {
        return new ValueDefs();
    }

    /**
     * Create an instance of {@link GmtLink }
     * 
     */
    public GmtLink createGmtLink() {
        return new GmtLink();
    }

    /**
     * Create an instance of {@link DimensionDef }
     * 
     */
    public DimensionDef createDimensionDef() {
        return new DimensionDef();
    }

    /**
     * Create an instance of {@link Now }
     * 
     */
    public Now createNow() {
        return new Now();
    }

    /**
     * Create an instance of {@link IsUnknownVariable }
     * 
     */
    public IsUnknownVariable createIsUnknownVariable() {
        return new IsUnknownVariable();
    }

    /**
     * Create an instance of {@link TheSingleStep }
     * 
     */
    public TheSingleStep createTheSingleStep() {
        return new TheSingleStep();
    }

    /**
     * Create an instance of {@link TimeRange }
     * 
     */
    public TimeRange createTimeRange() {
        return new TimeRange();
    }

    /**
     * Create an instance of {@link MultiSetRef }
     * 
     */
    public MultiSetRef createMultiSetRef() {
        return new MultiSetRef();
    }

    /**
     * Create an instance of {@link Duration }
     * 
     */
    public Duration createDuration() {
        return new Duration();
    }

    /**
     * Create an instance of {@link IsKnownParameter }
     * 
     */
    public IsKnownParameter createIsKnownParameter() {
        return new IsKnownParameter();
    }

    /**
     * Create an instance of {@link CountConstraint }
     * 
     */
    public CountConstraint createCountConstraint() {
        return new CountConstraint();
    }

    /**
     * Create an instance of {@link StartTime }
     * 
     */
    public StartTime createStartTime() {
        return new StartTime();
    }

    /**
     * Create an instance of {@link IsKnownVariable }
     * 
     */
    public IsKnownVariable createIsKnownVariable() {
        return new IsKnownVariable();
    }

    /**
     * Create an instance of {@link QualitativeEntry }
     * 
     */
    public QualitativeEntry createQualitativeEntry() {
        return new QualitativeEntry();
    }

    /**
     * Create an instance of {@link PutFirst }
     * 
     */
    public PutFirst createPutFirst() {
        return new PutFirst();
    }

    /**
     * Create an instance of {@link ElseBranch }
     * 
     */
    public ElseBranch createElseBranch() {
        return new ElseBranch();
    }

    /**
     * Create an instance of {@link ReactivateCondition }
     * 
     */
    public ReactivateCondition createReactivateCondition() {
        return new ReactivateCondition();
    }

    /**
     * Create an instance of {@link RawDataDef }
     * 
     */
    public RawDataDef createRawDataDef() {
        return new RawDataDef();
    }

    /**
     * Create an instance of {@link One }
     * 
     */
    public One createOne() {
        return new One();
    }

    /**
     * Create an instance of {@link TheTemporalPattern }
     * 
     */
    public TheTemporalPattern createTheTemporalPattern() {
        return new TheTemporalPattern();
    }

    /**
     * Create an instance of {@link Returns }
     * 
     */
    public Returns createReturns() {
        return new Returns();
    }

    /**
     * Create an instance of {@link SimpleConditionNot }
     * 
     */
    public SimpleConditionNot createSimpleConditionNot() {
        return new SimpleConditionNot();
    }

    /**
     * Create an instance of {@link TimeWindowDef }
     * 
     */
    public TimeWindowDef createTimeWindowDef() {
        return new TimeWindowDef();
    }

    /**
     * Create an instance of {@link VariableRef }
     * 
     */
    public VariableRef createVariableRef() {
        return new VariableRef();
    }

    /**
     * Create an instance of {@link Argument }
     * 
     */
    public Argument createArgument() {
        return new Argument();
    }

    /**
     * Create an instance of {@link ArgumentRef }
     * 
     */
    public ArgumentRef createArgumentRef() {
        return new ArgumentRef();
    }

    /**
     * Create an instance of {@link Effects }
     * 
     */
    public Effects createEffects() {
        return new Effects();
    }

    /**
     * Create an instance of {@link Set }
     * 
     */
    public Set createSet() {
        return new Set();
    }

    /**
     * Create an instance of {@link ResourceConstraint }
     * 
     */
    public ResourceConstraint createResourceConstraint() {
        return new ResourceConstraint();
    }

    /**
     * Create an instance of {@link MultiSet }
     * 
     */
    public MultiSet createMultiSet() {
        return new MultiSet();
    }

    /**
     * Create an instance of {@link Operation }
     * 
     */
    public Operation createOperation() {
        return new Operation();
    }

    /**
     * Create an instance of {@link IteratorDef }
     * 
     */
    public IteratorDef createIteratorDef() {
        return new IteratorDef();
    }

    /**
     * Create an instance of {@link TypicalDuration }
     * 
     */
    public TypicalDuration createTypicalDuration() {
        return new TypicalDuration();
    }

    /**
     * Create an instance of {@link StartingShift }
     * 
     */
    public StartingShift createStartingShift() {
        return new StartingShift();
    }

    /**
     * Create an instance of {@link WaitFor }
     * 
     */
    public WaitFor createWaitFor() {
        return new WaitFor();
    }

    /**
     * Create an instance of {@link ReturnValue }
     * 
     */
    public ReturnValue createReturnValue() {
        return new ReturnValue();
    }

    /**
     * Create an instance of {@link SelectionDef }
     * 
     */
    public SelectionDef createSelectionDef() {
        return new SelectionDef();
    }

    /**
     * Create an instance of {@link DoAfter }
     * 
     */
    public DoAfter createDoAfter() {
        return new DoAfter();
    }

    /**
     * Create an instance of {@link Year }
     * 
     */
    public Year createYear() {
        return new Year();
    }

    /**
     * Create an instance of {@link LogicalCombinationDef }
     * 
     */
    public LogicalCombinationDef createLogicalCombinationDef() {
        return new LogicalCombinationDef();
    }

    /**
     * Create an instance of {@link PlanActivation }
     * 
     */
    public PlanActivation createPlanActivation() {
        return new PlanActivation();
    }

    /**
     * Create an instance of {@link CyclicalPlanBody }
     * 
     */
    public CyclicalPlanBody createCyclicalPlanBody() {
        return new CyclicalPlanBody();
    }

    /**
     * Create an instance of {@link ParameterProposition }
     * 
     */
    public ParameterProposition createParameterProposition() {
        return new ParameterProposition();
    }

    /**
     * Create an instance of {@link StateSpecificPattern }
     * 
     */
    public StateSpecificPattern createStateSpecificPattern() {
        return new StateSpecificPattern();
    }

    /**
     * Create an instance of {@link WindowLength }
     * 
     */
    public WindowLength createWindowLength() {
        return new WindowLength();
    }

    /**
     * Create an instance of {@link ValueRange }
     * 
     */
    public ValueRange createValueRange() {
        return new ValueRange();
    }

    /**
     * Create an instance of {@link VariableAssignment }
     * 
     */
    public VariableAssignment createVariableAssignment() {
        return new VariableAssignment();
    }

    /**
     * Create an instance of {@link Earliest }
     * 
     */
    public Earliest createEarliest() {
        return new Earliest();
    }

    /**
     * Create an instance of {@link RightHandSide }
     * 
     */
    public RightHandSide createRightHandSide() {
        return new RightHandSide();
    }

    /**
     * Create an instance of {@link Then }
     * 
     */
    public Then createThen() {
        return new Then();
    }

    /**
     * Create an instance of {@link Comparison }
     * 
     */
    public Comparison createComparison() {
        return new Comparison();
    }

    /**
     * Create an instance of {@link AbortCondition }
     * 
     */
    public AbortCondition createAbortCondition() {
        return new AbortCondition();
    }

    /**
     * Create an instance of {@link References }
     * 
     */
    public References createReferences() {
        return new References();
    }

    /**
     * Create an instance of {@link SpreadDef }
     * 
     */
    public SpreadDef createSpreadDef() {
        return new SpreadDef();
    }

    /**
     * Create an instance of {@link Frequency }
     * 
     */
    public Frequency createFrequency() {
        return new Frequency();
    }

    /**
     * Create an instance of {@link TimeWindowAnalysisDef }
     * 
     */
    public TimeWindowAnalysisDef createTimeWindowAnalysisDef() {
        return new TimeWindowAnalysisDef();
    }

    /**
     * Create an instance of {@link TemporalConstraint }
     * 
     */
    public TemporalConstraint createTemporalConstraint() {
        return new TemporalConstraint();
    }

    /**
     * Create an instance of {@link SoftBounds }
     * 
     */
    public SoftBounds createSoftBounds() {
        return new SoftBounds();
    }

    /**
     * Create an instance of {@link IsAtStart }
     * 
     */
    public IsAtStart createIsAtStart() {
        return new IsAtStart();
    }

    /**
     * Create an instance of {@link Ask }
     * 
     */
    public Ask createAsk() {
        return new Ask();
    }

    /**
     * Create an instance of {@link Channel }
     * 
     */
    public Channel createChannel() {
        return new Channel();
    }

    /**
     * Create an instance of {@link RemoveAtIterator }
     * 
     */
    public RemoveAtIterator createRemoveAtIterator() {
        return new RemoveAtIterator();
    }

    /**
     * Create an instance of {@link MinimumValue }
     * 
     */
    public MinimumValue createMinimumValue() {
        return new MinimumValue();
    }

    /**
     * Create an instance of {@link PositiveInfinite }
     * 
     */
    public PositiveInfinite createPositiveInfinite() {
        return new PositiveInfinite();
    }

    /**
     * Create an instance of {@link PlanStateConstraint }
     * 
     */
    public PlanStateConstraint createPlanStateConstraint() {
        return new PlanStateConstraint();
    }

    /**
     * Create an instance of {@link AbortIfGroup }
     * 
     */
    public AbortIfGroup createAbortIfGroup() {
        return new AbortIfGroup();
    }

    /**
     * Create an instance of {@link ContextDef }
     * 
     */
    public ContextDef createContextDef() {
        return new ContextDef();
    }

    /**
     * Create an instance of {@link UnitEntry }
     * 
     */
    public UnitEntry createUnitEntry() {
        return new UnitEntry();
    }

    /**
     * Create an instance of {@link TheConstantExpression }
     * 
     */
    public TheConstantExpression createTheConstantExpression() {
        return new TheConstantExpression();
    }

    /**
     * Create an instance of {@link CyclicalTimeAnnotationAssignment }
     * 
     */
    public CyclicalTimeAnnotationAssignment createCyclicalTimeAnnotationAssignment() {
        return new CyclicalTimeAnnotationAssignment();
    }

    /**
     * Create an instance of {@link IterativePlan }
     * 
     */
    public IterativePlan createIterativePlan() {
        return new IterativePlan();
    }

    /**
     * Create an instance of {@link PlanBody }
     * 
     */
    public PlanBody createPlanBody() {
        return new PlanBody();
    }

    /**
     * Create an instance of {@link TimeAnnotation }
     * 
     */
    public TimeAnnotation createTimeAnnotation() {
        return new TimeAnnotation();
    }

    /**
     * Create an instance of {@link IsWithinRange }
     * 
     */
    public IsWithinRange createIsWithinRange() {
        return new IsWithinRange();
    }

    /**
     * Create an instance of {@link IsManual }
     * 
     */
    public IsManual createIsManual() {
        return new IsManual();
    }

    /**
     * Create an instance of {@link UntilCondition }
     * 
     */
    public UntilCondition createUntilCondition() {
        return new UntilCondition();
    }

    /**
     * Create an instance of {@link PlanSchema }
     * 
     */
    public PlanSchema createPlanSchema() {
        return new PlanSchema();
    }

    /**
     * Create an instance of {@link PutLast }
     * 
     */
    public PutLast createPutLast() {
        return new PutLast();
    }

    /**
     * Create an instance of {@link PlanStateTransition }
     * 
     */
    public PlanStateTransition createPlanStateTransition() {
        return new PlanStateTransition();
    }

    /**
     * Create an instance of {@link ConstantOperation }
     * 
     */
    public ConstantOperation createConstantOperation() {
        return new ConstantOperation();
    }

    /**
     * Create an instance of {@link DurationDef }
     * 
     */
    public DurationDef createDurationDef() {
        return new DurationDef();
    }

    /**
     * Create an instance of {@link ContextNot }
     * 
     */
    public ContextNot createContextNot() {
        return new ContextNot();
    }

    /**
     * Create an instance of {@link TerminationCondition }
     * 
     */
    public TerminationCondition createTerminationCondition() {
        return new TerminationCondition();
    }

    /**
     * Create an instance of {@link StepWidth }
     * 
     */
    public StepWidth createStepWidth() {
        return new StepWidth();
    }

    /**
     * Create an instance of {@link EndPointDef }
     * 
     */
    public EndPointDef createEndPointDef() {
        return new EndPointDef();
    }

    /**
     * Create an instance of {@link LogicalDependencyDef }
     * 
     */
    public LogicalDependencyDef createLogicalDependencyDef() {
        return new LogicalDependencyDef();
    }

    /**
     * Create an instance of {@link Index }
     * 
     */
    public Index createIndex() {
        return new Index();
    }

    /**
     * Create an instance of {@link EpisodeDef }
     * 
     */
    public EpisodeDef createEpisodeDef() {
        return new EpisodeDef();
    }

    /**
     * Create an instance of {@link Comment }
     * 
     */
    public Comment createComment() {
        return new Comment();
    }

    /**
     * Create an instance of {@link GoToNext }
     * 
     */
    public GoToNext createGoToNext() {
        return new GoToNext();
    }

    /**
     * Create an instance of {@link Latest }
     * 
     */
    public Latest createLatest() {
        return new Latest();
    }

    /**
     * Create an instance of {@link UnitDef }
     * 
     */
    public UnitDef createUnitDef() {
        return new UnitDef();
    }

    /**
     * Create an instance of {@link VariableDef }
     * 
     */
    public VariableDef createVariableDef() {
        return new VariableDef();
    }

    /**
     * Create an instance of {@link HardBounds }
     * 
     */
    public HardBounds createHardBounds() {
        return new HardBounds();
    }

    /**
     * Create an instance of {@link Second }
     * 
     */
    public Second createSecond() {
        return new Second();
    }

    /**
     * Create an instance of {@link Offset }
     * 
     */
    public Offset createOffset() {
        return new Offset();
    }

    /**
     * Create an instance of {@link SecondaryQualitativeEntry }
     * 
     */
    public SecondaryQualitativeEntry createSecondaryQualitativeEntry() {
        return new SecondaryQualitativeEntry();
    }

    /**
     * Create an instance of {@link PlanGroup }
     * 
     */
    public PlanGroup createPlanGroup() {
        return new PlanGroup();
    }

    /**
     * Create an instance of {@link ParameterChange }
     * 
     */
    public ParameterChange createParameterChange() {
        return new ParameterChange();
    }

    /**
     * Create an instance of {@link NumericalScaleDef }
     * 
     */
    public NumericalScaleDef createNumericalScaleDef() {
        return new NumericalScaleDef();
    }

    /**
     * Create an instance of {@link LinearRegressionDef }
     * 
     */
    public LinearRegressionDef createLinearRegressionDef() {
        return new LinearRegressionDef();
    }

    /**
     * Create an instance of {@link Position }
     * 
     */
    public Position createPosition() {
        return new Position();
    }

    /**
     * Create an instance of {@link QualitativeParameterDef }
     * 
     */
    public QualitativeParameterDef createQualitativeParameterDef() {
        return new QualitativeParameterDef();
    }

    /**
     * Create an instance of {@link CompoundDef }
     * 
     */
    public CompoundDef createCompoundDef() {
        return new CompoundDef();
    }

    /**
     * Create an instance of {@link ComparisonDef }
     * 
     */
    public ComparisonDef createComparisonDef() {
        return new ComparisonDef();
    }

    /**
     * Create an instance of {@link Any }
     * 
     */
    public Any createAny() {
        return new Any();
    }

    /**
     * Create an instance of {@link PlanPointer }
     * 
     */
    public PlanPointer createPlanPointer() {
        return new PlanPointer();
    }

    /**
     * Create an instance of {@link TheAnyParameterDef }
     * 
     */
    public TheAnyParameterDef createTheAnyParameterDef() {
        return new TheAnyParameterDef();
    }

    /**
     * Create an instance of {@link Cardinality }
     * 
     */
    public Cardinality createCardinality() {
        return new Cardinality();
    }

    /**
     * Create an instance of {@link MaximumValue }
     * 
     */
    public MaximumValue createMaximumValue() {
        return new MaximumValue();
    }

    /**
     * Create an instance of {@link CenterDef }
     * 
     */
    public CenterDef createCenterDef() {
        return new CenterDef();
    }

    /**
     * Create an instance of {@link Limits }
     * 
     */
    public Limits createLimits() {
        return new Limits();
    }

    /**
     * Create an instance of {@link RecordDef }
     * 
     */
    public RecordDef createRecordDef() {
        return new RecordDef();
    }

    /**
     * Create an instance of {@link Bibref }
     * 
     */
    public Bibref createBibref() {
        return new Bibref();
    }

    /**
     * Create an instance of {@link EndDef }
     * 
     */
    public EndDef createEndDef() {
        return new EndDef();
    }

    /**
     * Create an instance of {@link PrimaryKey }
     * 
     */
    public PrimaryKey createPrimaryKey() {
        return new PrimaryKey();
    }

    /**
     * Create an instance of {@link FieldRef }
     * 
     */
    public FieldRef createFieldRef() {
        return new FieldRef();
    }

    /**
     * Create an instance of {@link InvokingPlan }
     * 
     */
    public InvokingPlan createInvokingPlan() {
        return new InvokingPlan();
    }

    /**
     * Create an instance of {@link IsUnknownParameter }
     * 
     */
    public IsUnknownParameter createIsUnknownParameter() {
        return new IsUnknownParameter();
    }

    /**
     * Create an instance of {@link Plans }
     * 
     */
    public Plans createPlans() {
        return new Plans();
    }

    /**
     * Create an instance of {@link ContextRef }
     * 
     */
    public ContextRef createContextRef() {
        return new ContextRef();
    }

    /**
     * Create an instance of {@link ToBeDefined }
     * 
     */
    public ToBeDefined createToBeDefined() {
        return new ToBeDefined();
    }

    /**
     * Create an instance of {@link RemoveElement }
     * 
     */
    public RemoveElement createRemoveElement() {
        return new RemoveElement();
    }

    /**
     * Create an instance of {@link LibraryDefs }
     * 
     */
    public LibraryDefs createLibraryDefs() {
        return new LibraryDefs();
    }

    /**
     * Create an instance of {@link DayOfWeek }
     * 
     */
    public DayOfWeek createDayOfWeek() {
        return new DayOfWeek();
    }

    /**
     * Create an instance of {@link QualitativeScaleDef }
     * 
     */
    public QualitativeScaleDef createQualitativeScaleDef() {
        return new QualitativeScaleDef();
    }

    /**
     * Create an instance of {@link ResetIterator }
     * 
     */
    public ResetIterator createResetIterator() {
        return new ResetIterator();
    }

    /**
     * Create an instance of {@link TimesCompleted }
     * 
     */
    public TimesCompleted createTimesCompleted() {
        return new TimesCompleted();
    }

    /**
     * Create an instance of {@link LowerBound }
     * 
     */
    public LowerBound createLowerBound() {
        return new LowerBound();
    }

    /**
     * Create an instance of {@link If }
     * 
     */
    public If createIf() {
        return new If();
    }

    /**
     * Create an instance of {@link LeftHandSide }
     * 
     */
    public LeftHandSide createLeftHandSide() {
        return new LeftHandSide();
    }

    /**
     * Create an instance of {@link MaximalDecrease }
     * 
     */
    public MaximalDecrease createMaximalDecrease() {
        return new MaximalDecrease();
    }

    /**
     * Create an instance of {@link Month }
     * 
     */
    public Month createMonth() {
        return new Month();
    }

    /**
     * Create an instance of {@link SetContext }
     * 
     */
    public SetContext createSetContext() {
        return new SetContext();
    }

    /**
     * Create an instance of {@link GoToPrevious }
     * 
     */
    public GoToPrevious createGoToPrevious() {
        return new GoToPrevious();
    }

    /**
     * Create an instance of {@link ListDef }
     * 
     */
    public ListDef createListDef() {
        return new ListDef();
    }

    /**
     * Create an instance of {@link ParameterDependency }
     * 
     */
    public ParameterDependency createParameterDependency() {
        return new ParameterDependency();
    }

    /**
     * Create an instance of {@link IfThenElse }
     * 
     */
    public IfThenElse createIfThenElse() {
        return new IfThenElse();
    }

    /**
     * Create an instance of {@link Url }
     * 
     */
    public Url createUrl() {
        return new Url();
    }

    /**
     * Create an instance of {@link Default }
     * 
     */
    public Default createDefault() {
        return new Default();
    }

    /**
     * Create an instance of {@link IsMemberOf }
     * 
     */
    public IsMemberOf createIsMemberOf() {
        return new IsMemberOf();
    }

    /**
     * Create an instance of {@link TrustPeriod }
     * 
     */
    public TrustPeriod createTrustPeriod() {
        return new TrustPeriod();
    }

    /**
     * Create an instance of {@link SamplingFrequency }
     * 
     */
    public SamplingFrequency createSamplingFrequency() {
        return new SamplingFrequency();
    }

    /**
     * Create an instance of {@link StandardDeviationDef }
     * 
     */
    public StandardDeviationDef createStandardDeviationDef() {
        return new StandardDeviationDef();
    }

    /**
     * Create an instance of {@link ParameterGroup }
     * 
     */
    public ParameterGroup createParameterGroup() {
        return new ParameterGroup();
    }

    /**
     * Create an instance of {@link Hour }
     * 
     */
    public Hour createHour() {
        return new Hour();
    }

    /**
     * Create an instance of {@link UnitClassList }
     * 
     */
    public UnitClassList createUnitClassList() {
        return new UnitClassList();
    }

    /**
     * Create an instance of {@link Self }
     * 
     */
    public Self createSelf() {
        return new Self();
    }

    /**
     * Create an instance of {@link EndTime }
     * 
     */
    public EndTime createEndTime() {
        return new EndTime();
    }

    /**
     * Create an instance of {@link LowerLimit }
     * 
     */
    public LowerLimit createLowerLimit() {
        return new LowerLimit();
    }

    /**
     * Create an instance of {@link EpisodeAnalysisDef }
     * 
     */
    public EpisodeAnalysisDef createEpisodeAnalysisDef() {
        return new EpisodeAnalysisDef();
    }

    /**
     * Create an instance of {@link ValueDescription }
     * 
     */
    public ValueDescription createValueDescription() {
        return new ValueDescription();
    }

    /**
     * Create an instance of {@link RefersTo }
     * 
     */
    public RefersTo createRefersTo() {
        return new RefersTo();
    }

    /**
     * Create an instance of {@link Element }
     * 
     */
    public Element createElement() {
        return new Element();
    }

    /**
     * Create an instance of {@link TimeAnnotationAssignment }
     * 
     */
    public TimeAnnotationAssignment createTimeAnnotationAssignment() {
        return new TimeAnnotationAssignment();
    }

    /**
     * Create an instance of {@link ValidTimeDef }
     * 
     */
    public ValidTimeDef createValidTimeDef() {
        return new ValidTimeDef();
    }

    /**
     * Create an instance of {@link InsertBeforePosition }
     * 
     */
    public InsertBeforePosition createInsertBeforePosition() {
        return new InsertBeforePosition();
    }

    /**
     * Create an instance of {@link Minimum }
     * 
     */
    public Minimum createMinimum() {
        return new Minimum();
    }

    /**
     * Create an instance of {@link Bound }
     * 
     */
    public Bound createBound() {
        return new Bound();
    }

    /**
     * Create an instance of {@link ListRef }
     * 
     */
    public ListRef createListRef() {
        return new ListRef();
    }

    /**
     * Create an instance of {@link ParameterRef }
     * 
     */
    public ParameterRef createParameterRef() {
        return new ParameterRef();
    }

    /**
     * Create an instance of {@link PlanEffect }
     * 
     */
    public PlanEffect createPlanEffect() {
        return new PlanEffect();
    }

    /**
     * Create an instance of {@link CyclicalTimeAnnotation }
     * 
     */
    public CyclicalTimeAnnotation createCyclicalTimeAnnotation() {
        return new CyclicalTimeAnnotation();
    }

    /**
     * Create an instance of {@link ScalarDef }
     * 
     */
    public ScalarDef createScalarDef() {
        return new ScalarDef();
    }

    /**
     * Create an instance of {@link Limit }
     * 
     */
    public Limit createLimit() {
        return new Limit();
    }

    /**
     * Create an instance of {@link SetOfCyclicalTimePoints }
     * 
     */
    public SetOfCyclicalTimePoints createSetOfCyclicalTimePoints() {
        return new SetOfCyclicalTimePoints();
    }

    /**
     * Create an instance of {@link TimeWindowSize }
     * 
     */
    public TimeWindowSize createTimeWindowSize() {
        return new TimeWindowSize();
    }

    /**
     * Create an instance of {@link LimitDef }
     * 
     */
    public LimitDef createLimitDef() {
        return new LimitDef();
    }

    /**
     * Create an instance of {@link LibraryInfo }
     * 
     */
    public LibraryInfo createLibraryInfo() {
        return new LibraryInfo();
    }

    /**
     * Create an instance of {@link ArrayDef }
     * 
     */
    public ArrayDef createArrayDef() {
        return new ArrayDef();
    }

    /**
     * Create an instance of {@link Source }
     * 
     */
    public Source createSource() {
        return new Source();
    }

    /**
     * Create an instance of {@link IsAutomatic }
     * 
     */
    public IsAutomatic createIsAutomatic() {
        return new IsAutomatic();
    }

    /**
     * Create an instance of {@link RetrospectiveTrustPeriod }
     * 
     */
    public RetrospectiveTrustPeriod createRetrospectiveTrustPeriod() {
        return new RetrospectiveTrustPeriod();
    }

    /**
     * Create an instance of {@link DayOfMonth }
     * 
     */
    public DayOfMonth createDayOfMonth() {
        return new DayOfMonth();
    }

    /**
     * Create an instance of {@link FilterPrecondition }
     * 
     */
    public FilterPrecondition createFilterPrecondition() {
        return new FilterPrecondition();
    }

    /**
     * Create an instance of {@link CyclicalTimePointRef }
     * 
     */
    public CyclicalTimePointRef createCyclicalTimePointRef() {
        return new CyclicalTimePointRef();
    }

    /**
     * Create an instance of {@link Defaults }
     * 
     */
    public Defaults createDefaults() {
        return new Defaults();
    }

    /**
     * Create an instance of {@link BooleanDef }
     * 
     */
    public BooleanDef createBooleanDef() {
        return new BooleanDef();
    }

    /**
     * Create an instance of {@link Numerator }
     * 
     */
    public Numerator createNumerator() {
        return new Numerator();
    }

    /**
     * Create an instance of {@link DoRepeatedly }
     * 
     */
    public DoRepeatedly createDoRepeatedly() {
        return new DoRepeatedly();
    }

    /**
     * Create an instance of {@link SlopeDef }
     * 
     */
    public SlopeDef createSlopeDef() {
        return new SlopeDef();
    }

    /**
     * Create an instance of {@link RetryDelay }
     * 
     */
    public RetryDelay createRetryDelay() {
        return new RetryDelay();
    }

    /**
     * Create an instance of {@link Always }
     * 
     */
    public Always createAlways() {
        return new Always();
    }

    /**
     * Create an instance of {@link SetRef }
     * 
     */
    public SetRef createSetRef() {
        return new SetRef();
    }

    /**
     * Create an instance of {@link WaitForNot }
     * 
     */
    public WaitForNot createWaitForNot() {
        return new WaitForNot();
    }

    /**
     * Create an instance of {@link AbortIfNot }
     * 
     */
    public AbortIfNot createAbortIfNot() {
        return new AbortIfNot();
    }

    /**
     * Create an instance of {@link UpperLimit }
     * 
     */
    public UpperLimit createUpperLimit() {
        return new UpperLimit();
    }

    /**
     * Create an instance of {@link SimpleConditionCombination }
     * 
     */
    public SimpleConditionCombination createSimpleConditionCombination() {
        return new SimpleConditionCombination();
    }

    /**
     * Create an instance of {@link TimePoint }
     * 
     */
    public TimePoint createTimePoint() {
        return new TimePoint();
    }

    /**
     * Create an instance of {@link ReferencePoint }
     * 
     */
    public ReferencePoint createReferencePoint() {
        return new ReferencePoint();
    }

    /**
     * Create an instance of {@link StaticPlanPointer }
     * 
     */
    public StaticPlanPointer createStaticPlanPointer() {
        return new StaticPlanPointer();
    }

    /**
     * Create an instance of {@link Domain }
     * 
     */
    public Domain createDomain() {
        return new Domain();
    }

    /**
     * Create an instance of {@link NotYetDefined }
     * 
     */
    public NotYetDefined createNotYetDefined() {
        return new NotYetDefined();
    }

    /**
     * Create an instance of {@link InsertAfterIterator }
     * 
     */
    public InsertAfterIterator createInsertAfterIterator() {
        return new InsertAfterIterator();
    }

    /**
     * Create an instance of {@link RepeatSpecification }
     * 
     */
    public RepeatSpecification createRepeatSpecification() {
        return new RepeatSpecification();
    }

    /**
     * Create an instance of {@link TimeToAlarmDef }
     * 
     */
    public TimeToAlarmDef createTimeToAlarmDef() {
        return new TimeToAlarmDef();
    }

    /**
     * Create an instance of {@link Epsilon }
     * 
     */
    public Epsilon createEpsilon() {
        return new Epsilon();
    }

    /**
     * Create an instance of {@link SingleSteps }
     * 
     */
    public SingleSteps createSingleSteps() {
        return new SingleSteps();
    }

    /**
     * Create an instance of {@link UserPerformed }
     * 
     */
    public UserPerformed createUserPerformed() {
        return new UserPerformed();
    }

    /**
     * Create an instance of {@link SetIterator }
     * 
     */
    public SetIterator createSetIterator() {
        return new SetIterator();
    }

    /**
     * Create an instance of {@link StringConstant }
     * 
     */
    public StringConstant createStringConstant() {
        return new StringConstant();
    }

    /**
     * Create an instance of {@link GetPosition }
     * 
     */
    public GetPosition createGetPosition() {
        return new GetPosition();
    }

    /**
     * Create an instance of {@link AbortIfItem }
     * 
     */
    public AbortIfItem createAbortIfItem() {
        return new AbortIfItem();
    }

    /**
     * Create an instance of {@link UseDomain }
     * 
     */
    public UseDomain createUseDomain() {
        return new UseDomain();
    }

    /**
     * Create an instance of {@link List }
     * 
     */
    public List createList() {
        return new List();
    }

    /**
     * Create an instance of {@link LeftHandParameter }
     * 
     */
    public LeftHandParameter createLeftHandParameter() {
        return new LeftHandParameter();
    }

    /**
     * Create an instance of {@link DoForEach }
     * 
     */
    public DoForEach createDoForEach() {
        return new DoForEach();
    }

    /**
     * Create an instance of {@link HistogramDef }
     * 
     */
    public HistogramDef createHistogramDef() {
        return new HistogramDef();
    }

    /**
     * Create an instance of {@link ArgumentValue }
     * 
     */
    public ArgumentValue createArgumentValue() {
        return new ArgumentValue();
    }

    /**
     * Create an instance of {@link ThenBranch }
     * 
     */
    public ThenBranch createThenBranch() {
        return new ThenBranch();
    }

    /**
     * Create an instance of {@link ConstraintCombination }
     * 
     */
    public ConstraintCombination createConstraintCombination() {
        return new ConstraintCombination();
    }

    /**
     * Create an instance of {@link FirstUnitEntryEquals }
     * 
     */
    public FirstUnitEntryEquals createFirstUnitEntryEquals() {
        return new FirstUnitEntryEquals();
    }

    /**
     * Create an instance of {@link SimpleCondition }
     * 
     */
    public SimpleCondition createSimpleCondition() {
        return new SimpleCondition();
    }

    /**
     * Create an instance of {@link ContextCombination }
     * 
     */
    public ContextCombination createContextCombination() {
        return new ContextCombination();
    }

    /**
     * Create an instance of {@link DomainDefs }
     * 
     */
    public DomainDefs createDomainDefs() {
        return new DomainDefs();
    }

    /**
     * Create an instance of {@link Intentions }
     * 
     */
    public Intentions createIntentions() {
        return new Intentions();
    }

    /**
     * Create an instance of {@link TimeOut }
     * 
     */
    public TimeOut createTimeOut() {
        return new TimeOut();
    }

    /**
     * Create an instance of {@link ValueRef }
     * 
     */
    public ValueRef createValueRef() {
        return new ValueRef();
    }

    /**
     * Create an instance of {@link WaitForGroup }
     * 
     */
    public WaitForGroup createWaitForGroup() {
        return new WaitForGroup();
    }

    /**
     * Create an instance of {@link LimitEntry }
     * 
     */
    public LimitEntry createLimitEntry() {
        return new LimitEntry();
    }

    /**
     * Create an instance of {@link FinishingShift }
     * 
     */
    public FinishingShift createFinishingShift() {
        return new FinishingShift();
    }

    /**
     * Create an instance of {@link DeltaLink }
     * 
     */
    public DeltaLink createDeltaLink() {
        return new DeltaLink();
    }

    /**
     * Create an instance of {@link StandardErrorDef }
     * 
     */
    public StandardErrorDef createStandardErrorDef() {
        return new StandardErrorDef();
    }

    /**
     * Create an instance of {@link Context }
     * 
     */
    public Context createContext() {
        return new Context();
    }

    /**
     * Create an instance of {@link Tolerance }
     * 
     */
    public Tolerance createTolerance() {
        return new Tolerance();
    }

    /**
     * Create an instance of {@link DerivedFrom }
     * 
     */
    public DerivedFrom createDerivedFrom() {
        return new DerivedFrom();
    }

}
