<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<plan-library>
	<library-info title="test-">
		<administrative-data original-author="0625008" />
	</library-info>
	<domain-defs>
		<domain name="mainDomain">
			<not-yet-defined />
		</domain>
	</domain-defs>
	<plans>
		<plan-group>
			<plan title="" name="Stuff">
				<plan-body>
					<subplans type="sequentially">
						<wait-for>
							<to-be-defined />
						</wait-for>
						<subplans type="parallel">
							<wait-for>
								<to-be-defined />
							</wait-for>
							<plan-activation>
								<plan-schema name="Haken" />
							</plan-activation>
							<subplans type="sequentially">
								<wait-for>
									<to-be-defined />
								</wait-for>
								<plan-activation>
									<plan-schema name="Schluessel" />
								</plan-activation>
								<plan-activation>
									<plan-schema name="Tuer" />
								</plan-activation>
							</subplans>
							<subplans type="unordered">
								<wait-for>
									<to-be-defined />
								</wait-for>
								<plan-activation>
									<plan-schema name="Otter" />
								</plan-activation>
								<plan-activation>
									<plan-schema name="Kreuz" />
								</plan-activation>
							</subplans>
						</subplans>
						<plan-activation>
							<plan-schema name="Birne" />
						</plan-activation>
						<subplans type="any-order">
							<wait-for>
								<to-be-defined />
							</wait-for>
							<subplans type="parallel">
								<wait-for>
									<to-be-defined />
								</wait-for>
								<plan-activation>
									<plan-schema name="Palme" />
								</plan-activation>
								<subplans type="any-order">
									<wait-for>
										<to-be-defined />
									</wait-for>
									<plan-activation>
										<plan-schema name="Kapazitor" />
									</plan-activation>
									<plan-activation>
										<plan-schema name="Kutsche" />
									</plan-activation>
								</subplans>
								<subplans type="sequentially">
									<wait-for>
										<to-be-defined />
									</wait-for>
									<plan-activation>
										<plan-schema name="Karton" />
									</plan-activation>
									<plan-activation>
										<plan-schema name="Papier" />
									</plan-activation>
								</subplans>
							</subplans>
							<subplans type="sequentially">
								<wait-for>
									<to-be-defined />
								</wait-for>
								<plan-activation>
									<plan-schema name="Plastik" />
								</plan-activation>
								<plan-activation>
									<plan-schema name="Wolle" />
								</plan-activation>
							</subplans>
							<plan-activation>
								<plan-schema name="Jet" />
							</plan-activation>
							<subplans type="unordered">
								<wait-for>
									<to-be-defined />
								</wait-for>
								<plan-activation>
									<plan-schema name="Wolke" />
								</plan-activation>
								<plan-activation>
									<plan-schema name="Sonne" />
								</plan-activation>
							</subplans>
						</subplans>
					</subplans>
				</plan-body>
			</plan>
			<plan title="" name="Birne">
				<conditions>
					<complete-condition>
						<constraint-combination type="or">
							<simple-condition>
								<comparison type="greater-than">
									<left-hand-side>
										<parameter-ref name="dauer" />
									</left-hand-side>
									<right-hand-side>
										<numerical-constant value="48" />
									</right-hand-side>
								</comparison>
							</simple-condition>
							<plan-state-constraint state="completed">
								<plan-pointer>
									<static-plan-pointer plan-name="Ofen" />
								</plan-pointer>
								<time-annotation>
									<now />
								</time-annotation>
							</plan-state-constraint>
						</constraint-combination>
					</complete-condition>
					<filter-precondition>
						<constraint-combination type="and">
							<parameter-proposition parameter-name="istGelb">
								<value-description type="equal">
									<qualitative-constant value="no" />
								</value-description>
								<context>
									<any />
								</context>
								<time-annotation>
									<now />
								</time-annotation>
							</parameter-proposition>
							<parameter-proposition parameter-name="suess">
								<value-description type="greater-than">
									<numerical-constant value="0.65" />
								</value-description>
								<context>
									<any />
								</context>
								<time-annotation>
									<now />
								</time-annotation>
							</parameter-proposition>
						</constraint-combination>
					</filter-precondition>
					<abort-condition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="istWurming" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</abort-condition>
				</conditions>
				<plan-body>
					<subplans type="unordered">
						<wait-for>
							<to-be-defined />
						</wait-for>
						<plan-activation>
							<plan-schema name="Ofen" />
						</plan-activation>
						<plan-activation>
							<plan-schema name="Nebel" />
						</plan-activation>
						<plan-activation>
							<plan-schema name="Flugzeug" />
						</plan-activation>
					</subplans>
				</plan-body>
			</plan>
			<plan title="" name="Nebel">
				<plan-body />
			</plan>
			<plan title="" name="Ofen">
				<plan-body>
					<subplans type="any-order">
						<wait-for>
							<to-be-defined />
						</wait-for>
						<subplans type="unordered">
							<wait-for>
								<to-be-defined />
							</wait-for>
							<plan-activation>
								<plan-schema name="Kristall" />
							</plan-activation>
							<plan-activation>
								<plan-schema name="Kohle" />
							</plan-activation>
						</subplans>
						<subplans type="parallel">
							<wait-for>
								<to-be-defined />
							</wait-for>
							<plan-activation>
								<plan-schema name="Tiger" />
							</plan-activation>
							<subplans type="sequentially">
								<wait-for>
									<to-be-defined />
								</wait-for>
								<plan-activation>
									<plan-schema name="Fliege" />
								</plan-activation>
								<plan-activation>
									<plan-schema name="Biene" />
								</plan-activation>
							</subplans>
						</subplans>
					</subplans>
				</plan-body>
			</plan>
			<plan title="" name="Kristall">
				<plan-body />
			</plan>
			<plan title="" name="Kohle">
				<plan-body />
			</plan>
			<plan title="" name="Tiger">
				<plan-body />
			</plan>
			<plan title="" name="Fliege">
				<plan-body />
			</plan>
			<plan title="" name="Biene">
				<plan-body />
			</plan>
			<plan title="" name="Haken">
				<plan-body />
			</plan>
			<plan title="" name="Schluessel">
				<conditions>
					<complete-condition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="random" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</complete-condition>
					<abort-condition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="random" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</abort-condition>
					<suspend-condition>
					</suspend-condition>
					<reactivate-condition>
					</reactivate-condition>
				</conditions>
				<plan-body />
			</plan>
			<plan title="" name="Tuer">
				<plan-body />
			</plan>
			<plan title="" name="Otter">
				<conditions>
					<complete-condition>
					</complete-condition>
					<setup-precondition>
					</setup-precondition>
					<filter-precondition>
					</filter-precondition>
					<abort-condition>
					</abort-condition>
				</conditions>
				<plan-body />
			</plan>
			<plan title="" name="Kreuz">
				<plan-body />
			</plan>
			<plan title="" name="Kapazitor">
				<conditions>
					<complete-condition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="random" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</complete-condition>
					<suspend-condition>
					</suspend-condition>
					<reactivate-condition>
					</reactivate-condition>
				</conditions>
				<plan-body />
			</plan>
			<plan title="" name="Karton">
				<conditions>
					<complete-condition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="random" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</complete-condition>
					<filter-precondition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="random" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</filter-precondition>
					<suspend-condition>
					</suspend-condition>
				</conditions>
				<plan-body />
			</plan>
			<plan title="" name="Papier">
				<plan-body />
			</plan>
			<plan title="" name="Kutsche">
				<plan-body />
			</plan>
			<plan title="" name="Palme">
				<plan-body />
			</plan>
			<plan title="" name="Plastik">
				<plan-body />
			</plan>
			<plan title="" name="Wolle">
				<plan-body />
			</plan>
			<plan title="" name="Jet">
				<conditions>
					<complete-condition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="random" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</complete-condition>
					<setup-precondition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="random" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</setup-precondition>
					<filter-precondition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="random" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</filter-precondition>
					<abort-condition>
						<simple-condition>
							<comparison type="equal">
								<left-hand-side>
									<parameter-ref name="random" />
								</left-hand-side>
								<right-hand-side>
									<constant-ref name="yes" />
								</right-hand-side>
							</comparison>
						</simple-condition>
					</abort-condition>
				</conditions>
				<plan-body>
					<subplans type="parallel">
						<wait-for>
							<to-be-defined />
						</wait-for>
						<subplans type="sequentially">
							<wait-for>
								<to-be-defined />
							</wait-for>
							<plan-activation>
								<plan-schema name="Antrieb" />
							</plan-activation>
							<plan-activation>
								<plan-schema name="Cockpit" />
							</plan-activation>
						</subplans>
						<plan-activation>
							<plan-schema name="Treibstoff" />
						</plan-activation>
					</subplans>
				</plan-body>
			</plan>
			<plan title="" name="Treibstoff">
				<plan-body />
			</plan>
			<plan title="" name="Antrieb">
				<plan-body />
			</plan>
			<plan title="" name="Cockpit">
				<plan-body />
			</plan>
			<plan title="" name="Sonne">
				<plan-body />
			</plan>
			<plan title="" name="Wolke">
				<plan-body />
			</plan>
			<plan title="" name="Flugzeug">
				<conditions>
					<suspend-condition>
					</suspend-condition>
				</conditions>
				<plan-body>
					<subplans type="unordered">
						<wait-for>
							<to-be-defined />
						</wait-for>
						<subplans retry-aborted-subplans="no"
							wait-for-optional-subplans="no" type="sequentially">
							<wait-for>
								<to-be-defined />
							</wait-for>
							<plan-activation>
								<plan-schema name="Antrieb" />
							</plan-activation>
							<plan-activation>
								<plan-schema name="Cockpit" />
							</plan-activation>
						</subplans>
						<plan-activation>
							<plan-schema name="Kohle" />
						</plan-activation>
					</subplans>
				</plan-body>
			</plan>
		</plan-group>
	</plans>
</plan-library>